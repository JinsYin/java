{"./":{"url":"./","title":"简介","keywords":"","body":"Java 知识库 LICENSE Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"installation/":{"url":"installation/","title":"安装","keywords":"","body":"Java 安装 OpenJDK 与 Oracla Java Java 有两种不同的实现：OpenJDK 和 Oracle Java 。两者都基于相同的代码，但 OpenJDK 是 Java 的参考实现，且是完全开源的，而 Oracle Java 包含一些专有代码（proprietary code）。 JDK 与 JRE 对比项 描述 JRE（Java Runtime Environment） JVM（Java Virtual Machine）的一种实现，运行编译完成的 Java 应用程序和 Applet JDK（Java Development Kit） 包含 JRE，以及开发、编译 Java 应用程序和 Applet 的其他软件 平台 Linux macOS Windows 环境变量 变量名 变量值含义 JAVA_HOME Java 安装路径 CLASSPATH Java 字节码文件（*.class）的执行路径 Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"installation/java-for-linux.html":{"url":"installation/java-for-linux.html","title":"Java for Linux","keywords":"","body":"Java for Linux 安装 OpenJDK CentOS7 $ yum list java* --showduplicate $ yum install -y java-1.8.0-openjdk 配置环境变量（Centos 千万不能修改 /etc/environment 文件） $ sudo cat ~/.bashrc export JAVA_HOME=\"/usr/lib/jvm/jre-1.8.0-openjdk\" export JRE_HOME=\"/usr/lib/jvm/jre-1.8.0\" PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin $ source ~/.bashrc $ java -version $ echo $JAVA_HOME Ubuntu Ubuntu 14.04： $ sudo add-apt-repository ppa:webupd8team/java $ sudo apt-get update $ sudo apt-get install oracle-java8-installer Ubuntu 16.04： $ apt-get install -y openjdk-8-jre $ apt-get install -y openjdk-8-jdk 管理多个 java 版本（可选）： $ sudo update-alternatives --config java (指定候选项) # 或者: sudo update-java-alternatives --config /usr/lib/jvm/java-8-openjdk-amd64 设置环境变量： $ sudo cat /etc/environment export JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" PATH=$PATH:$JAVA_HOME/bin:$JAVA_HOME/jre/bin $ source /etc/environment $ java -version $ echo $JAVA_HOME 安装 Oracle JDK Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"installation/java-for-macos.html":{"url":"installation/java-for-macos.html","title":"Java for macOS","keywords":"","body":"Java for macOS 安装 OpenJDK 安装 Oracle JDK Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"installation/java-for-windows.html":{"url":"installation/java-for-windows.html","title":"Java for Windows","keywords":"","body":"Java for Windows 安装 OpenJDK 安装 Oracle JDK Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"getting-started.html":{"url":"getting-started.html","title":"入门","keywords":"","body":"Java 入门 三步曲 编写（Hello.java） // 文件名必须和 public class 类名相同，且一个文件只能有一个 public class 类 public class Hello { public static void main(String args[]) { System.out.println(\"Hello, world\"); } } 编译 $ javac Hello.java $ ls Hello.class Hello.java 运行（由 JVM 解释执行 + JIT 即是编译高频字节码为机器码） $ java Hello # 只有 class 文件的文件名，没有扩展名 Hello, world Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"datatype/":{"url":"datatype/","title":"数据类型","keywords":"","body":"Java 数据类型 基本数据类型 引用数据类型 数据类型 内存大小（bit） 值域 描述 byte 8 -128 ~ 127 char 16 short 16 -32768 ~ 32767 int 32 -2147483648 ~ 2147483647 long 64 -9223372036854775808 ~ 9223372036854775807 float 32 1.4E-45 ~ 3.4028235E38 精确到小数点后 7 位 double 64 4.9E-324 ~ 1.7976931348623157E308 精确到小数点后 15 位 boolean - true 或 false 拆箱和装箱 基本类型 包装类型 byte Byte char Character short Short int Integer long Long float Float double Double boolean Boolean 自动装箱 自动拆箱 类型默认值 Data Type Default Value (for fields) byte 0 short 0 int 0 long 0L float 0.0f double 0.0d char '\\u0000' boolean false 引用数据类型（String ...） null 类型溢出 long a = Integer.MAX_VALUE; // 2147483647 long b = Integer.MAX_VALUE + 1; // -2147483648 （类型溢出） long c = Integer.MAX_VALUE + 1L; // 2147483648 （自动类型转换） long d = (long)Integer.MAX_VALUE + 1; // 2147483648 （强制类型转换） 数值默认类型 所有整数数值字面量（如 1024）都是 int 类型 所有小数数值字面量（如 1.23）都是 double 类型 // error: integer number too large long a = 12345678900; // 错（12345678900 超出了 int 范围） long a = 12345678900L; // 对 long a = 123; // 对 // error: incompatible types: possible lossy conversion from double to float float f = 1.23 // 错（1.23 是 double 类型，存在精度损失） float f = 1.23f // 对 参考 Primitive Data Types Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"datatype/char.html":{"url":"datatype/char.html","title":"char","keywords":"","body":"Java 数据类型之 char 转义字符 转义字符 描述 转义字符 描述 \\f 换页符 \\r \\\\ \\ \\\" \" \\b \\t \\' ' \\n Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"datatype/string.html":{"url":"datatype/string.html","title":"String","keywords":"","body":"Java 数据类型之 String 两个字符串之间可以使用 + 进行连接 字符串使用 \" ... \" 括起来 任何数据类型遇到 String 类型的变量或常量都将转换成 String 类型 String、StringBuffer、StringBuilder 类 可变？ 线程安全？ 描述 String No Yes StringBuffer Yes Yes 内部使用 synchronized 来同步 StringBuilder Yes No String Pool Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"datatype/conversion.html":{"url":"datatype/conversion.html","title":"类型转换","keywords":"","body":"Java 数据类型转换 自动类型转换 +----------+ | char(16) | +----------+ | v +---------+ +-----------+ +---------+ +----------+ | byte(8) | --> | short(16) | --> | int(32) | --> | long(64) | ----+ +---------+ +-----------+ +---------+ +----------+ | | | | +---------+ +---------+ | loss| | | v v | +-----------+ +------------+ | | float(32) | ----> | double(64) | | +-----------+ +------------+ | ^ ^ | loss| |loss | +--------------------------------------+ loss：可能存在精度损失 1f / 3; // 0.33333334 （自动转成 float 类型） 10 / 3.5; // 2.857142857142857 （自动转成 double 类型） 10 / 3; // 3 强制类型转换 (float) 10 / 3; // 3.3333333 Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"datatype/array.html":{"url":"datatype/array.html","title":"数组","keywords":"","body":"Java 数据类型之数组 声明、初始化 声明 DataType array[]; DataType array[] = null; DataType[] array; DataType[] array = null; 初始化 array = new DataType[n]; // n 是数组长度 声明 + 初始化 DataType array[] = new DataType[n]; // n 是数组长度 Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"flow-control/":{"url":"flow-control/","title":"流程控制","keywords":"","body":"Java 流程控制 switch for foreach while do...while Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"operators/":{"url":"operators/","title":"运算符","keywords":"","body":"Java 运算符 关系运算符 逻辑运算符 运算符 描述 & && 逻辑与 ` ` ` ` 逻辑或 a b `a b` `a b` a & b a && b true true true true true true true false true true false false false true true true false false false false false false false false 位运算符 运算符 描述 & ` ` ^ ~ >> >>> a b a & b `a b` a ^ b 0 0 0 1 1 0 1 1 三目运算符 变量 = 条件 ? 表达式一 : 表达式二 Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"comment.html":{"url":"comment.html","title":"注释","keywords":"","body":"Java 注释 基础 // 当行注释 /* * 多 * 行 * 注 * 释 */ /** * 文 * 档 * 注 * 释 */ 文档注释 /** ... */ 注释的内容会被解释成程序的正式文档，并能包含在 javadoc 等工具生成的文档中。 Swagger Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"exception/":{"url":"exception/","title":"异常","keywords":"","body":"Java 异常处理 Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"io/":{"url":"io/","title":"I/O","keywords":"","body":"Java I/O Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"jni/":{"url":"jni/","title":"JNI","keywords":"","body":"Java Native Interface （JNI） 参考 共享库 Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"container/":{"url":"container/","title":"容器","keywords":"","body":"Java 容器 Collection Map Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"concurrent/":{"url":"concurrent/","title":"并发","keywords":"","body":"Java 并发 Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"keywords/":{"url":"keywords/","title":"关键字","keywords":"","body":"Java 关键字 - - - - - - 特殊标识符 true false null final static Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"oop/interface.html":{"url":"oop/interface.html","title":"接口","keywords":"","body":"Java 接口 Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"oop/abstract-class.html":{"url":"oop/abstract-class.html","title":"抽象类","keywords":"","body":"Java 抽象类 Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"oop/object.html":{"url":"oop/object.html","title":"Object 类","keywords":"","body":"Java Object 类 通用方法 public native int hashCode() public boolean equals(Object obj) protected native Object clone() throws CloneNotSupportedException public String toString() public final native Class getClass() protected void finalize() throws Throwable {} public final native void notify() public final native void notifyAll() public final native void wait(long timeout) throws InterruptedException public final void wait(long timeout, int nanos) throws InterruptedException public final void wait() throws InterruptedException Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "},"maven/":{"url":"maven/","title":"Maven","keywords":"","body":"Maven Maven 是一个项目构建工具，负责管理项目依赖。当添加依赖的时候，会首先从本地（默认路径：~/.m2）查找依赖，如果没有相应的依赖会从远程中心仓库自动下载依赖的 jar 包和/或源码包到本地。 安装 打包 $ mvn clean dist Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-14 "}}